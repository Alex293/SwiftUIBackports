{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"background"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Content"},{"kind":"text","text":">("},{"kind":"externalParam","text":"alignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Alignment","preciseIdentifier":"s:7SwiftUI9AlignmentV"},{"kind":"text","text":" = .center, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"content"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A view that uses the specified content as a background."}]}]},{"kind":"parameters","parameters":[{"name":"alignment","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The alignment that the modifier uses to position the"},{"type":"text","text":" "},{"type":"text","text":"implicit "},{"type":"codeVoice","code":"ZStack"},{"type":"text","text":" that groups the background views. The default"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"codeVoice","code":"Alignment\/center"},{"type":"text","text":"."}]}]},{"name":"content","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewBuilder"},{"type":"text","text":" that you use to declare the views to draw"},{"type":"text","text":" "},{"type":"text","text":"behind this view, stacked in a cascading order from bottom to top."},{"type":"text","text":" "},{"type":"text","text":"The last view that you list appears at the front of the stack."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this modifier to place one or more views behind another view."},{"type":"text","text":" "},{"type":"text","text":"For example, you can place a collection of stars beind a "},{"type":"codeVoice","code":"Text"},{"type":"text","text":" view:"}]},{"type":"codeListing","syntax":null,"code":["Text(\"ABCDEF\")","    .background(alignment: .leading) { Star(color: .red) }","    .background(alignment: .center) { Star(color: .green) }","    .background(alignment: .trailing) { Star(color: .blue) }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The example above assumes that you’ve defined a "},{"type":"codeVoice","code":"Star"},{"type":"text","text":" view with a"},{"type":"text","text":" "},{"type":"text","text":"parameterized color:"}]},{"type":"codeListing","syntax":null,"code":["struct Star: View {","    var color: Color","","    var body: some View {","        Image(systemName: \"star.fill\")","            .foregroundStyle(color)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By setting different "},{"type":"codeVoice","code":"alignment"},{"type":"text","text":" values for each modifier, you make the"},{"type":"text","text":" "},{"type":"text","text":"stars appear in different places behind the text:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"View-background-2"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you specify more than one view in the "},{"type":"codeVoice","code":"content"},{"type":"text","text":" closure, the modifier"},{"type":"text","text":" "},{"type":"text","text":"collects all of the views in the closure into an implicit "},{"type":"codeVoice","code":"ZStack"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"taking them in order from back to front. For example, you can layer a"},{"type":"text","text":" "},{"type":"text","text":"vertical bar behind a circle, with both of those behind a horizontal"},{"type":"text","text":" "},{"type":"text","text":"bar:"}]},{"type":"codeListing","syntax":null,"code":["Color.blue","    .frame(width: 200, height: 10) \/\/ Creates a horizontal bar.","    .background {","        Color.green","            .frame(width: 10, height: 100) \/\/ Creates a vertical bar.","        Circle()","            .frame(width: 50, height: 50)","    }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both the background modifier and the implicit "},{"type":"codeVoice","code":"ZStack"},{"type":"text","text":" composed from"},{"type":"text","text":" "},{"type":"text","text":"the background content — the circle and the vertical bar — use a"},{"type":"text","text":" "},{"type":"text","text":"default "},{"type":"codeVoice","code":"Alignment\/center"},{"type":"text","text":" alignment. The vertical bar appears"},{"type":"text","text":" "},{"type":"text","text":"centered behind the circle, and both appear as a composite view centered"},{"type":"text","text":" "},{"type":"text","text":"behind the horizontal bar:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"View-background-3"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you specify an alignment for the background, it applies to the"},{"type":"text","text":" "},{"type":"text","text":"implicit stack rather than to the individual views in the closure. You"},{"type":"text","text":" "},{"type":"text","text":"can see this if you add the "},{"type":"codeVoice","code":"Alignment\/leading"},{"type":"text","text":" alignment:"}]},{"type":"codeListing","syntax":null,"code":["Color.blue","    .frame(width: 200, height: 10)","    .background(alignment: .leading) {","        Color.green","            .frame(width: 10, height: 100)","        Circle()","            .frame(width: 50, height: 50)","    }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The vertical bar and the circle move as a unit to align the stack"},{"type":"text","text":" "},{"type":"text","text":"with the leading edge of the horizontal bar, while the"},{"type":"text","text":" "},{"type":"text","text":"vertical bar remains centered on the circle:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"View-background-3a"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To control the placement of individual items inside the "},{"type":"codeVoice","code":"content"},{"type":"text","text":" "},{"type":"text","text":"closure, either use a different background modifier for each item, as"},{"type":"text","text":" "},{"type":"text","text":"the earlier example of stars under text demonstrates, or add an explicit"},{"type":"text","text":" "},{"type":"codeVoice","code":"ZStack"},{"type":"text","text":" inside the content closure with its own alignment:"}]},{"type":"codeListing","syntax":null,"code":["Color.blue","    .frame(width: 200, height: 10)","    .background(alignment: .leading) {","        ZStack(alignment: .leading) {","            Color.green","                .frame(width: 10, height: 100)","            Circle()","                .frame(width: 50, height: 50)","        }","    }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The stack alignment ensures that the circle’s leading edge aligns with"},{"type":"text","text":" "},{"type":"text","text":"the vertical bar’s, while the background modifier aligns the composite"},{"type":"text","text":" "},{"type":"text","text":"view with the horizontal bar:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"View-background-4"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can achieve layering without a background modifier by putting both"},{"type":"text","text":" "},{"type":"text","text":"the modified view and the background content into a "},{"type":"codeVoice","code":"ZStack"},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"produces a simpler view hierarchy, but it changes the layout priority"},{"type":"text","text":" "},{"type":"text","text":"that SwiftUI applies to the views. Use the background modifier when you"},{"type":"text","text":" "},{"type":"text","text":"want the modified view to dominate the layout."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to specify a "},{"type":"codeVoice","code":"ShapeStyle"},{"type":"text","text":" like a"},{"type":"text","text":" "},{"type":"codeVoice","code":"HierarchicalShapeStyle"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"Material"},{"type":"text","text":" as the background, use"},{"type":"text","text":" "},{"type":"codeVoice","code":"View\/background(_:ignoresSafeAreaEdges:)"},{"type":"text","text":" instead."},{"type":"text","text":" "},{"type":"text","text":"To specify a "},{"type":"codeVoice","code":"Shape"},{"type":"text","text":" or "},{"type":"codeVoice","code":"InsettableShape"},{"type":"text","text":", use"},{"type":"text","text":" "},{"type":"codeVoice","code":"View\/background(_:in:fillStyle:)-89n7j"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"View\/background(_:in:fillStyle:)-20tq5"},{"type":"text","text":", respectively."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/background(alignment:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/background(alignment:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Layers the views that you specify behind this view."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"background(alignment:_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"background"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Content"},{"kind":"text","text":">("},{"kind":"externalParam","text":"alignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Alignment","preciseIdentifier":"s:7SwiftUI9AlignmentV"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"symbolKind":"method","externalID":"s:16SwiftUIBackports8BackportVAA0A2UI4ViewRzlE10background9alignment_QrAD9AlignmentV_qd__yXEtAdERd__lF","extendedModule":"SwiftUIBackports","modules":[{"name":"SwiftUIBackports"}]},"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/background(alignment:_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"background(alignment:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"background"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Content"},{"kind":"text","text":">("},{"kind":"externalParam","text":"alignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Alignment","preciseIdentifier":"s:7SwiftUI9AlignmentV"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"type":"text","text":"Layers the views that you specify behind this view."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/background(alignment:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftuibackports\/backport\/background(alignment:_:)"},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"role":"collection","title":"SwiftUIBackports","abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","type":"topic","url":"\/documentation\/swiftuibackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"role":"symbol","title":"Backport","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"type":"text","text":" "},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport"}}}