{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefreshAction"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike the official implementation, this backport does not affect any"},{"type":"text","text":" "},{"type":"text","text":"view’s like "},{"type":"codeVoice","code":"List"},{"type":"text","text":" to provide automatic pull-to-refresh behaviour."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this to offer refresh capability in your custom views."},{"type":"text","text":" "},{"type":"text","text":"Read the "},{"type":"codeVoice","code":"EnvironmentValues\/refresh"},{"type":"text","text":" environment value to get the"},{"type":"text","text":" "},{"type":"codeVoice","code":"RefreshAction"},{"type":"text","text":" instance for a given "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":". If you find"},{"type":"text","text":" "},{"type":"text","text":"a non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" value, change your view’s appearance or behavior to offer"},{"type":"text","text":" "},{"type":"text","text":"the refresh to the user, and call the instance to conduct the"},{"type":"text","text":" "},{"type":"text","text":"refresh. You can call the refresh instance directly because it defines"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction\/callAsFunction()"},{"type":"text","text":" method that Swift calls"},{"type":"text","text":" "},{"type":"text","text":"when you call the instance:"}]},{"type":"codeListing","syntax":null,"code":["struct RefreshableView: View {","    @Environment(\\.refresh) private var refresh","","    var body: some View {","        Button(\"Refresh\") {","            Task {","                await refresh?()","            }","        }","        .disabled(refresh == nil)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Be sure to call the handler asynchronously by preceding it"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"await"},{"type":"text","text":". Because the call is asynchronous, you can use"},{"type":"text","text":" "},{"type":"text","text":"its lifetime to indicate progress to the user. For example,"},{"type":"text","text":" "},{"type":"text","text":"you might reveal an indeterminate "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/ProgressView"},{"type":"text","text":" before"},{"type":"text","text":" "},{"type":"text","text":"calling the handler, and hide it when the handler completes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your code isn’t already in an asynchronous context, create a"},{"type":"text","text":" "},{"type":"text","text":"doc:\/\/com.apple.documentation\/documentation\/Swift\/Task"},{"type":"text","text":" for the"},{"type":"text","text":" "},{"type":"text","text":"method to run in. If you do this, consider adding a way for the"},{"type":"text","text":" "},{"type":"text","text":"user to cancel the task. For more information, see"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"emphasis","inlineContent":[{"type":"text","text":"The Swift Programming Language"}]},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/refreshaction"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An action that initiates a refresh operation."}],"kind":"symbol","metadata":{"modules":[{"name":"SwiftUIBackports"}],"navigatorTitle":[{"kind":"identifier","text":"RefreshAction"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Any"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Backport.RefreshAction","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefreshAction"}],"symbolKind":"struct","externalID":"s:16SwiftUIBackports8BackportVAAypRszlE13RefreshActionV","extendedModule":"SwiftUIBackports","platforms":[]},"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction\/callAsFunction()"]}],"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/RefreshAction":{"deprecated":true,"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Any"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Backport.RefreshAction","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefreshAction"}],"abstract":[{"type":"text","text":"An action that initiates a refresh operation."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RefreshAction"}],"url":"\/documentation\/swiftuibackports\/backport\/refreshaction"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/RefreshAction/callAsFunction()":{"role":"symbol","title":"callAsFunction()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/RefreshAction\/callAsFunction()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/swiftuibackports\/backport\/refreshaction\/callasfunction()"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/ProgressView":{"deprecated":true,"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Any"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Backport.ProgressView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProgressView"}],"abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/ProgressView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ProgressView"}],"url":"\/documentation\/swiftuibackports\/backport\/progressview"},"https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html":{"title":"Concurrency","titleInlineContent":[{"type":"text","text":"Concurrency"}],"type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html","url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"role":"symbol","title":"Backport","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"type":"text","text":" "},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport"},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"role":"collection","title":"SwiftUIBackports","abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","type":"topic","url":"\/documentation\/swiftuibackports"}}}