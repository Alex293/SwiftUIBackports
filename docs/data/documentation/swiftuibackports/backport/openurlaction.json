{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OpenURLAction"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Read the "},{"type":"codeVoice","code":"EnvironmentValues.backportOpenURL"},{"type":"text","text":" environment value to get an"},{"type":"text","text":" "},{"type":"text","text":"instance of this structure for a given "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":". Call the"},{"type":"text","text":" "},{"type":"text","text":"instance to open a URL. You call the instance directly because it"},{"type":"text","text":" "},{"type":"text","text":"defines a "},{"type":"codeVoice","code":"Backport.OpenURLAction.callAsFunction(_:)"},{"type":"text","text":" method that Swift"},{"type":"text","text":" "},{"type":"text","text":"calls when you call the instance."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you can open a web site when the user taps a button:"}]},{"type":"codeListing","syntax":null,"code":["struct OpenURLExample: View {","    @Environment(\\.backportOpenURL) private var openURL","","    var body: some View {","        Button {","            if let url = URL(string: \"https:\/\/www.example.com\") {","                openURL(url)","            }","        } label: {","            Label(\"Get Help\", systemImage: \"person.fill.questionmark\")","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to know whether the action succeeds, add a completion"},{"type":"text","text":" "},{"type":"text","text":"handler that takes a Boolean value. In this case, Swift implicitly"},{"type":"text","text":" "},{"type":"text","text":"calls the "},{"type":"codeVoice","code":"Backport.OpenURLAction.callAsFunction(_:completion:)"},{"type":"text","text":" method"},{"type":"text","text":" "},{"type":"text","text":"instead. That method calls your completion handler after it determines"},{"type":"text","text":" "},{"type":"text","text":"whether it can open the URL, but possibly before it finishes opening"},{"type":"text","text":" "},{"type":"text","text":"the URL. You can add a handler to the example above so that"},{"type":"text","text":" "},{"type":"text","text":"it prints the outcome to the console:"}]},{"type":"codeListing","syntax":null,"code":["openURL(url) { accepted in","    print(accepted ? \"Success\" : \"Failure\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The system provides a default open URL action with behavior"},{"type":"text","text":" "},{"type":"text","text":"that depends on the contents of the URL. For example, the default"},{"type":"text","text":" "},{"type":"text","text":"action opens a Universal Link in the associated app if possible,"},{"type":"text","text":" "},{"type":"text","text":"or in the user’s default web browser if not."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also set a custom action using the "},{"type":"codeVoice","code":"View.environment(_:_:)"},{"type":"text","text":" "},{"type":"text","text":"view modifier. Any views that read the action from the environment,"},{"type":"text","text":" "},{"type":"text","text":"including the built-in "},{"type":"codeVoice","code":"Link"},{"type":"text","text":" view and "},{"type":"codeVoice","code":"Text"},{"type":"text","text":" views with markdown"},{"type":"text","text":" "},{"type":"text","text":"links, or links in attributed strings, use your action. Initialize an"},{"type":"text","text":" "},{"type":"text","text":"action by calling the "},{"type":"codeVoice","code":"Backport.OpenURLAction.init(handler:)"},{"type":"text","text":" initializer with"},{"type":"text","text":" "},{"type":"text","text":"a handler that takes a URL and returns an "},{"type":"codeVoice","code":"Backport.OpenURLAction.Result"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["Text(\"Visit [Example Company](https:\/\/www.example.com) for details.\")","    .environment(\\.backportOpenURL, Backport.OpenURLAction { url in","        handleURL(url) \/\/ Define this method to take appropriate action.","        return .handled","    })"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI translates the value that your custom action’s handler"},{"type":"text","text":" "},{"type":"text","text":"returns into an appropriate Boolean result for the action call."},{"type":"text","text":" "},{"type":"text","text":"For example, a view that uses the action declared above"},{"type":"text","text":" "},{"type":"text","text":"receives "},{"type":"codeVoice","code":"true"},{"type":"text","text":" when calling the action, because the"},{"type":"text","text":" "},{"type":"text","text":"handler always returns "},{"type":"codeVoice","code":"Backport.OpenURLAction.Result.handled"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/openurlaction"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An action that opens a URL."}],"kind":"symbol","metadata":{"modules":[{"name":"SwiftUIBackports"}],"navigatorTitle":[{"kind":"identifier","text":"OpenURLAction"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Any"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Backport.OpenURLAction","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OpenURLAction"}],"symbolKind":"struct","externalID":"s:16SwiftUIBackports8BackportVAAypRszlE13OpenURLActionV","extendedModule":"SwiftUIBackports","platforms":[]},"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction\/Result"]},{"title":"Initializers","identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction\/init(handler:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction\/callAsFunction(_:)","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction\/callAsFunction(_:completion:)"]}],"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"role":"symbol","title":"Backport","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"type":"text","text":" "},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/OpenURLAction/init(handler:)":{"role":"symbol","title":"init(handler:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Backport","preciseIdentifier":"s:16SwiftUIBackports8BackportV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"OpenURLAction","preciseIdentifier":"s:16SwiftUIBackports8BackportVAAypRszlE13OpenURLActionV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:16SwiftUIBackports8BackportVAAypRszlE13OpenURLActionV6ResultV"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction\/init(handler:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/swiftuibackports\/backport\/openurlaction\/init(handler:)"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/OpenURLAction/callAsFunction(_:)":{"role":"symbol","title":"callAsFunction(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction\/callAsFunction(_:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/swiftuibackports\/backport\/openurlaction\/callasfunction(_:)"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/OpenURLAction/callAsFunction(_:completion:)":{"role":"symbol","title":"callAsFunction(_:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction\/callAsFunction(_:completion:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/swiftuibackports\/backport\/openurlaction\/callasfunction(_:completion:)"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/OpenURLAction":{"deprecated":true,"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Any"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Backport.OpenURLAction","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OpenURLAction"}],"abstract":[{"type":"text","text":"An action that opens a URL."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OpenURLAction"}],"url":"\/documentation\/swiftuibackports\/backport\/openurlaction"},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"role":"collection","title":"SwiftUIBackports","abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","type":"topic","url":"\/documentation\/swiftuibackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/OpenURLAction/Result":{"deprecated":true,"role":"symbol","title":"Backport.OpenURLAction.Result","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Result"}],"abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/OpenURLAction\/Result","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Result"}],"url":"\/documentation\/swiftuibackports\/backport\/openurlaction\/result"}}}