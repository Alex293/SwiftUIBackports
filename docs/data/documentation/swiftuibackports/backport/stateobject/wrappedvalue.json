{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The wrapped value property provides primary access to the value’s data."},{"type":"text","text":" "},{"type":"text","text":"However, you don’t access "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" directly. Instead, use the"},{"type":"text","text":" "},{"type":"text","text":"property variable created with the "},{"type":"codeVoice","code":"@Backport.StateObject"},{"type":"text","text":" attribute:"}]},{"type":"codeListing","syntax":null,"code":["@Backport.StateObject var contact = Contact()","","var body: some View {","    Text(contact.name) \/\/ Accesses contact's wrapped value.","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you change a property of the wrapped value, you can access the new"},{"type":"text","text":" "},{"type":"text","text":"value immediately. However, SwiftUI updates views displaying the value"},{"type":"text","text":" "},{"type":"text","text":"asynchronously, so the user interface might not update immediately."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/stateobject\/wrappedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/wrappedValue","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The underlying value referenced by the state object."}],"kind":"symbol","metadata":{"role":"symbol","title":"wrappedValue","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"}],"symbolKind":"property","externalID":"s:16SwiftUIBackports8BackportVAA7Combine16ObservableObjectRzlE05StateF0V12wrappedValuexvp","modules":[{"name":"SwiftUIBackports"}],"platforms":[]},"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject"]]},"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject":{"deprecated":true,"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Backport.StateObject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateObject"}],"abstract":[{"type":"text","text":"A property wrapper type that instantiates an observable object."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateObject"}],"url":"\/documentation\/swiftuibackports\/backport\/stateobject"},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"role":"collection","title":"SwiftUIBackports","abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","type":"topic","url":"\/documentation\/swiftuibackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/StateObject/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"}],"abstract":[{"type":"text","text":"The underlying value referenced by the state object."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/StateObject\/wrappedValue","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/swiftuibackports\/backport\/stateobject\/wrappedvalue"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"role":"symbol","title":"Backport","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"type":"text","text":" "},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport"}}}