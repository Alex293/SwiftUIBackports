{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissAction"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"EnvironmentValues\/dismiss"},{"type":"text","text":" environment value to get the instance"},{"type":"text","text":" "},{"type":"text","text":"of this structure for a given "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":". Then call the instance"},{"type":"text","text":" "},{"type":"text","text":"to perform the dismissal. You call the instance directly because"},{"type":"text","text":" "},{"type":"text","text":"it defines a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/DismissAction\/callAsFunction()"},{"type":"text","text":" "},{"type":"text","text":"method that Swift calls when you call the instance."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you can create a button that calls the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/DismissAction"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["private struct SheetContents: View {","    @Environment(\\.backportDismiss) private var dismiss","","    var body: some View {","        Button(\"Done\") {","            dismiss()","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you present the "},{"type":"codeVoice","code":"SheetContents"},{"type":"text","text":" view in a sheet, the user can dismiss"},{"type":"text","text":" "},{"type":"text","text":"the sheet by tapping or clicking the sheet’s button:"}]},{"type":"codeListing","syntax":null,"code":["private struct DetailView: View {","    @State private var isSheetPresented = false","","    var body: some View {","        Button(\"Show Sheet\") {","            isSheetPresented = true","        }","        .sheet(isPresented: $isSheetPresented) {","            SheetContents()","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Be sure that you define the action in the appropriate environment."},{"type":"text","text":" "},{"type":"text","text":"For example, don’t reorganize the "},{"type":"codeVoice","code":"DetailView"},{"type":"text","text":" in the example above"},{"type":"text","text":" "},{"type":"text","text":"so that it creates the "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" property and calls it from the"},{"type":"text","text":" "},{"type":"codeVoice","code":"View\/sheet(item:onDismiss:content:)"},{"type":"text","text":" view modifier’s "},{"type":"codeVoice","code":"content"},{"type":"text","text":" "},{"type":"text","text":"closure:"}]},{"type":"codeListing","syntax":null,"code":["private struct DetailView: View {","    @State private var isSheetPresented = false","    @Environment(\\.backportDismiss) private var dismiss \/\/ Applies to DetailView.","","    var body: some View {","        Button(\"Show Sheet\") {","            isSheetPresented = true","        }","        .sheet(isPresented: $isSheetPresented) {","            Button(\"Done\") {","                dismiss() \/\/ Fails to dismiss the sheet.","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you do this, the sheet fails to dismiss because the action applies"},{"type":"text","text":" "},{"type":"text","text":"to the environment where you declared it, which is that of the detail"},{"type":"text","text":" "},{"type":"text","text":"view, rather than the sheet. In fact, if you’ve presented the detail"},{"type":"text","text":" "},{"type":"text","text":"view in a "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":", the dismissal pops the detail view"},{"type":"text","text":" "},{"type":"text","text":"from the navigation stack."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The dismiss action has no effect on a view that isn’t currently"},{"type":"text","text":" "},{"type":"text","text":"presented. If you need to query whether SwiftUI is currently presenting"},{"type":"text","text":" "},{"type":"text","text":"a view, read the "},{"type":"codeVoice","code":"EnvironmentValues\/backportIsPresented"},{"type":"text","text":" environment value."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftuibackports\/backport\/dismissaction"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/DismissAction","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An action that dismisses a presentation."}],"kind":"symbol","metadata":{"modules":[{"name":"SwiftUIBackports"}],"navigatorTitle":[{"kind":"identifier","text":"DismissAction"}],"role":"symbol","title":"Backport.DismissAction","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissAction"}],"symbolKind":"struct","externalID":"s:16SwiftUIBackports8BackportV13DismissActionV","extendedModule":"SwiftUIBackports","platforms":[]},"hierarchy":{"paths":[["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/DismissAction\/callAsFunction()"]}],"references":{"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/DismissAction":{"deprecated":true,"role":"symbol","title":"Backport.DismissAction","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissAction"}],"abstract":[{"type":"text","text":"An action that dismisses a presentation."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/DismissAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DismissAction"}],"url":"\/documentation\/swiftuibackports\/backport\/dismissaction"},"doc://SwiftUIBackports/documentation/SwiftUIBackports":{"role":"collection","title":"SwiftUIBackports","abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports","kind":"symbol","type":"topic","url":"\/documentation\/swiftuibackports"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport/DismissAction/callAsFunction()":{"role":"symbol","title":"callAsFunction()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport\/DismissAction\/callAsFunction()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/swiftuibackports\/backport\/dismissaction\/callasfunction()"},"doc://SwiftUIBackports/documentation/SwiftUIBackports/Backport":{"role":"symbol","title":"Backport","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backport"}],"abstract":[{"type":"text","text":"Provides a convenient method for backporting API,"},{"type":"text","text":" "},{"type":"text","text":"including types, functions, properties, property wrappers and more."}],"identifier":"doc:\/\/SwiftUIBackports\/documentation\/SwiftUIBackports\/Backport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Backport"}],"url":"\/documentation\/swiftuibackports\/backport"}}}